<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    

	<context:component-scan base-package="cn.taskSys" use-default-filters="true" />
        
	<mvc:annotation-driven/>
	 <!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>
	
	 <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>
    
	<!-- 以下配置将拦截所有的URL请求 -->
	<mvc:interceptors>  
	    <bean class="cn.taskSys.interceptor.SystemInterceptor" /> 
	</mvc:interceptors> 
	
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">        
        <property name="defaultEncoding" value="utf-8"></property>        
    </bean>
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC 的注解功能,完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />  <!-- json转换器 -->
			</list>
		</property>
	</bean>
	
	 <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <prop key="org.springframework.web.servlet.PageNotFound">error/pageNotFound</prop>  
                <prop key="org.springframework.dao.DataAccessException">error/dataAccessFailure</prop>  
                <prop key="org.springframework.transaction.TransactionException">error/dataAccessFailure</prop>
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>    
            </props>  
        </property>  
    </bean>  
	
	 <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<bean id="AfterReturningAdvice" class="cn.taskSys.interceptor.SystemLogAspect"></bean>  
	  <aop:config proxy-target-class="false">
	   <aop:aspect id="goLogAspect" ref="AfterReturningAdvice">
	    <aop:pointcut id="actionPointcut" expression="execution(* cn.taskSys.controller.*.*(..)) or execution(* cn.taskSys.service.impl.*.*(..))" />
	    <aop:around pointcut-ref="actionPointcut" method="writeLogInfo"/>
	   </aop:aspect>
	  </aop:config>
</beans>
