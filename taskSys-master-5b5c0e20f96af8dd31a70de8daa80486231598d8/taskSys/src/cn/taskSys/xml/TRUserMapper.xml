<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.taskSys.dao.UserDao">
	<resultMap type="cn.taskSys.entity.User" id="Base_Result_Map">
		<result column="USER_ID" property="userId"/>
		<result column="LOGIN_NAME" property="loginName"/>
		<result column="PASSWORD" property="password"/>
		<result column="USER_NAME" property="userName"/>
		<result column="MANAGER_ID" property="managerID"/>
		<result column="USER_SOURCE1" property="userSource"/>
		<result column="JOB_ID" property="jobId"/>
		<result column="ORG_ID" property="orgId"/>
		<result column="EMP_ID" property="empCode"/>
		<result column="STATUS" property="status"/>
		<result column="LOGIN_IP" property="loginIp"/>
		<result column="USER_TYPE" property="userType"/>
		<result column="LAST_LOGIN_TIME" property="lastLoginTime"/>
		<result column="CREATE_BY" property="createBy"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="LAST_MODIFY_BY" property="lastModifyBy"/>
		<result column="LAST_MODIFY_TIME" property="lastModifyTime"/>
		<!-- modify by yanjiming 20141124 begin查询用户 -->
		<result column="EMP_ID" property="empCode"/>
		<result column="ORG_ID" property="orgId"/>
		<!-- modify by yanjiming 20141124 end查询用户 -->
		<result column="DEPARTMENT_ID" property="department_id"/>
		<result column="company_id" property="company_id"/>
		<result column="TEAM_ID" property="team_id"/>
		<result column="EMPLOYED_DATE" property="employed_date"/>
		<result column="CREATES_DATE" property="creates_date"/>
		<result column="EMAIL" property="email"/>
		<result column="post_Name" property="postName"/>
		<result column="company_name" property="company_Name"/>
		<result column="department_Name" property="department_Name"/>
		<result column="position_Name" property="position_Name"/>
		<result column="team_Name" property="team_Name"/>
		<result column="speciality" property="speciality"/>
		<result column="page" property="page" />  
        <result column="maxResult" property="maxResult" /> 
        <result column="head_portrait" property="head_portrait"/> 
	</resultMap>
	<select id="getSeqNextval" resultType="String" >
    	SELECT nextval('task_seq') 
    </select>
	
	<!-- modify by yanjiming 20141121 begin查询用户 -->
	<select id="getUser" resultMap="Base_Result_Map" parameterType="User">
		 SELECT t.USER_ID,
    			t.LOGIN_NAME,
    			t.PASSWORD,
    			t.USER_NAME,
    			t.MANAGER_ID,
    			t.USER_SOURCE1,
    			t.JOB_ID,		
    			t.ORG_ID,
    			t.EMP_ID,
    			t.STATUS,
    			t.LOGIN_IP,
    			t.USER_TYPE,
    			t.LAST_LOGIN_TIME,
    			t.CREATE_BY,
    			t.CREATE_TIME,
    			t.LAST_MODIFY_BY,
    			t.LAST_MODIFY_TIME,
    			t.DEPARTMENT_ID,
    			t.COMPANY_ID,
    			t.TEAM_ID,
   			 	t.POSITION_ID,
    			t.EMPLOYED_DATE,
    			t.CREATES_DATE,
    			t.EMAIL,
    			t.speciality,
    			head_portrait
 
    FROM jx_users T
		where 1=1		
			<if test="loginName != null">
				and t.login_name = #{loginName}
			</if>
		<if test="password != null">
				and t.password = #{password}
			</if>
			<if test="managerID != null">
				and t.manager_ID = #{managerID}
			</if>
			<if test="userId != null">
				and t.USER_id = #{userId}
			</if>
	</select>
	<!-- modify by yanjiming 20141121 end 查询用户 -->
	
	<!-- 用户登录查询 -->
	<select id="getIsLogin" resultMap="Base_Result_Map" parameterType="User">
		 SELECT a.user_id,
           a.login_name,
           a.user_name,
           a.password,
           a.email,
           a.status,
           a.manager_id,
           a.User_Source1,
           a.create_by,
           a.create_time,
           a.last_modify_by,
           a.last_modify_time
 
    FROM jx_users a
    where A.USER_SOURCE1=#{userSource}
     AND a.status='0'
    and a.login_name= #{loginName}
	</select>
	
	
	<!-- 通过查询条件获取用户列表 -->
	<select id="getUsers" resultMap="Base_Result_Map" parameterType="User">
		 SELECT t.user_id,
           t.login_name,
           t.user_name,
           t.password,
           t.email,
           t.status,
           t.manager_id,
           t.User_Source1,
           t.create_by,
           t.create_time,
           t.last_modify_by,
           t.last_modify_time
 
    FROM jx_users T
    		where 1=1
			<if test="loginName != null and loginName != ''">
				and t.login_name like '%${loginName}%'
			</if>
			<if test="userName != null and userName != ''">
				and t.user_name like '%${userName}%'
			</if>
			<if test="managerID != null and managerID != ''">
				and t.manager_ID = #{managerID}
			</if>
			<if test="status != null and status != ''">
				and t.status = #{status}
			</if>
		ORDER BY t.user_name ASC
	</select>
	
	<!-- 通过查询条件获取用户列表 -->
	<select id="getPageUserData" resultMap="Base_Result_Map" parameterType="java.util.HashMap">
		
    	select z.* from (
			 SELECT t.USER_ID,
    			t.LOGIN_NAME,
    			t.PASSWORD,
    			t.USER_NAME,
    			t.MANAGER_ID,
    			t.USER_SOURCE1,
    			t.JOB_ID,		
  				(select p.name from JX_GLOBE_DICTIONARY p where t.job_id=p.code)  post_Name,
    			t.ORG_ID,
    			t.EMP_ID,
    			t.STATUS,
    			t.LOGIN_IP,
    			t.USER_TYPE,
    			t.LAST_LOGIN_TIME,
    			t.CREATE_BY,
    			t.CREATE_TIME,
    			t.LAST_MODIFY_BY,
    			t.LAST_MODIFY_TIME,
    			t.DEPARTMENT_ID,
    			t.company_id,
   				(select p.name from JX_GLOBE_DICTIONARY p where t.DEPARTMENT_ID=p.code)  department_Name,
   				(select p.name from JX_GLOBE_DICTIONARY p where t.company_id=p.code)  company_Name,
    			t.TEAM_ID,
    			(select p.name from JX_GLOBE_DICTIONARY p where t.TEAM_ID=p.code)  team_Name,
   			 	t.POSITION_ID,
    			(select p.name from JX_GLOBE_DICTIONARY p where t.POSITION_ID=p.code)  position_Name,
    			(select b.role_name from jx_user_role a,jx_roles b  where a.roleid = b.id and a.userid = t.user_id) roleName,
    			t.EMPLOYED_DATE,
    			t.CREATES_DATE,
    			t.speciality,
    			t.EMAIL
 
    	   FROM jx_users T
			 WHERE 1=1
			<if test="user != null and user.loginName != null and user.loginName != ''">
				and t.login_name like '%${user.loginName}%'
			</if>
			<if test="user != null and user.userName != null and user.userName != ''">
				and t.user_name like '%${user.userName}%'
			</if>
			<if test="user != null and user.company_id != null and user.company_id != ''">
				and t.company_id = #{user.company_id}
			</if>
			<if test="user != null and user.department_id != null and user.department_id != ''">
				and t.department_id = #{user.department_id}
			</if>
			<if test="user != null and user.speciality != null and user.speciality != ''">
				and t.speciality like '%${user.speciality}%'
			</if>
			<if test="user != null and user.status != null and user.status != ''">
				and t.status = #{user.status}
			</if>
			<if test="lname != null and lname != ''">
				<![CDATA[
				  and t.login_name <> #{lname}
				]]>
			</if>					
			
			ORDER BY t.last_modify_time desc
				)z   LIMIT #{nowNum} OFFSET #{begin}
		
	</select>
	
	<select id="getUserList1" resultMap="Base_Result_Map" parameterType="java.util.HashMap">
        
        select z.* from (
             SELECT t.USER_ID,
                t.LOGIN_NAME,
                t.PASSWORD,
                t.USER_NAME,
                t.MANAGER_ID,
                t.USER_SOURCE1,
                t.JOB_ID,       
                (select p.name from JX_GLOBE_DICTIONARY p where t.job_id=p.code)  post_Name,
                t.ORG_ID,
                t.EMP_ID,
                t.STATUS,
                t.LOGIN_IP,
                t.USER_TYPE,
                t.LAST_LOGIN_TIME,
                t.CREATE_BY,
                t.CREATE_TIME,
                t.LAST_MODIFY_BY,
                t.LAST_MODIFY_TIME,
                t.DEPARTMENT_ID,
                t.company_id,
                (select p.name from JX_GLOBE_DICTIONARY p where t.DEPARTMENT_ID=p.code)  department_Name,
                (select p.name from JX_GLOBE_DICTIONARY p where t.company_id=p.code)  company_Name,
                t.TEAM_ID,
                (select p.name from JX_GLOBE_DICTIONARY p where t.TEAM_ID=p.code)  team_Name,
                t.POSITION_ID,
                (select p.name from JX_GLOBE_DICTIONARY p where t.POSITION_ID=p.code)  position_Name,
                (select b.role_name from jx_user_role a,jx_roles b  where a.roleid = b.id and a.userid = t.user_id) roleName,
                t.EMPLOYED_DATE,
                t.CREATES_DATE,
                t.speciality,
                t.EMAIL
 
           FROM jx_users T
             WHERE 1=1
            <if test="user != null and user.loginName != null and user.loginName != ''">
                and t.login_name like '%${user.loginName}%'
            </if>
            <if test="user != null and user.userName != null and user.userName != ''">
                and t.user_name like '%${user.userName}%'
            </if>
            <if test="user != null and user.company_id != null and user.company_id != ''">
                and t.company_id = #{user.company_id}
            </if>
            <if test="user != null and user.department_id != null and user.department_id != ''">
                and t.department_id = #{user.department_id}
            </if>
            <if test="user != null and user.speciality != null and user.speciality != ''">
                and t.speciality like '%${user.speciality}%'
            </if>
            <if test="user != null and user.status != null and user.status != ''">
                and t.status = #{user.status}
            </if>
            <if test="lname != null and lname != ''">
                <![CDATA[
                  and t.login_name <> #{lname}
                ]]>
            </if>                     
            
            ORDER BY t.last_modify_time desc
                )z   LIMIT 
                <![CDATA[ #{maxResult} OFFSET ( #{page} - 1)*#{maxResult}   ]]>
        
    </select>
    
    <select id="getUserSize1" resultType="int" parameterType="java.util.Map">
        
        select count(*) from (
             SELECT t.USER_ID,
                t.LOGIN_NAME,
                t.PASSWORD,
                t.USER_NAME,
                t.MANAGER_ID,
                t.USER_SOURCE1,
                t.JOB_ID,       
                (select p.name from JX_GLOBE_DICTIONARY p where t.job_id=p.code)  post_Name,
                t.ORG_ID,
                t.EMP_ID,
                t.STATUS,
                t.LOGIN_IP,
                t.USER_TYPE,
                t.LAST_LOGIN_TIME,
                t.CREATE_BY,
                t.CREATE_TIME,
                t.LAST_MODIFY_BY,
                t.LAST_MODIFY_TIME,
                t.DEPARTMENT_ID,
                t.company_id,
                (select p.name from JX_GLOBE_DICTIONARY p where t.DEPARTMENT_ID=p.code)  department_Name,
                (select p.name from JX_GLOBE_DICTIONARY p where t.company_id=p.code)  company_Name,
                t.TEAM_ID,
                (select p.name from JX_GLOBE_DICTIONARY p where t.TEAM_ID=p.code)  team_Name,
                t.POSITION_ID,
                (select p.name from JX_GLOBE_DICTIONARY p where t.POSITION_ID=p.code)  position_Name,
                (select b.role_name from jx_user_role a,jx_roles b  where a.roleid = b.id and a.userid = t.user_id) roleName,
                t.EMPLOYED_DATE,
                t.CREATES_DATE,
                t.speciality,
                t.EMAIL
 
           FROM jx_users T
             WHERE 1=1
            <if test="user != null and user.loginName != null and user.loginName != ''">
                and t.login_name like '%${user.loginName}%'
            </if>
            <if test="user != null and user.userName != null and user.userName != ''">
                and t.user_name like '%${user.userName}%'
            </if>
            <if test="user != null and user.company_id != null and user.company_id != ''">
                and t.company_id = #{user.company_id}
            </if>
            <if test="user != null and user.department_id != null and user.department_id != ''">
                and t.department_id = #{user.department_id}
            </if>
            <if test="user != null and user.speciality != null and user.speciality != ''">
                and t.speciality like '%${user.speciality}%'
            </if>
            <if test="user != null and user.status != null and user.status != ''">
                and t.status = #{user.status}
            </if>
            <if test="lname != null and lname != ''">
                <![CDATA[
                  and t.login_name <> #{lname}
                ]]>
            </if>                    
            
            ) ky
        
    </select>
    
	<select id="getPageUserSize" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		SELECT COUNT(1)
	  	  FROM JX_users t 
		 WHERE 1 = 1
		<if test="user != null and user.loginName != null and user.loginName != ''">
			and t.login_name like '%${user.loginName}%'
		</if>
		<if test="user != null and user.userName != null and user.userName != ''">
			and t.user_name like '%${user.userName}%'
		</if>
		<if test="user != null and user.department_id != null and user.department_id != ''">
			and t.department_id = #{user.department_id}
		</if>
		<if test="user != null and user.company_id != null and user.company_id != ''">
				and t.company_id = #{user.company_id}
		</if>
		<if test="user != null and user.speciality != null and user.speciality != ''">
			and t.speciality like '%${user.speciality}%'
		</if>
		<if test="user != null and user.status != null and user.status != ''">
			and t.status = #{user.status}
		</if>
		<if test="lname != null and lname != ''">
				<![CDATA[
				  and t.login_name <> #{lname}
				]]>
			</if>	
	</select>
	
	<!-- 通过机构ID获取用户列表 -->
	<select id="getUsersBymanagerID" resultMap="Base_Result_Map" parameterType="String">
		 SELECT t.user_id,
           t.login_name,
           t.user_name,
           t.password,
           t.email,
           t.status,
           t.manager_id,
           t.User_Source1,
           t.create_by,
           t.create_time,
           t.last_modify_by,
           t.last_modify_time
 
    FROM jx_users T
		  WHERE t.manager_ID = #{managerID}
		  ORDER BY t.user_name ASC
	</select>

	<!-- 新增用户 -->
	<insert id="insertUser" parameterType="User">
		INSERT INTO jx_users  (
           <if test="userId != null">
               user_id,
           </if>		
           <if test="loginName != null">
               login_name,
           </if>			    
           <if test="password != null">
               password,
           </if>	
           <if test="userName != null">
               user_name,
           </if>
           <if test="empCode != null and empCode != ''">
               emp_id,
           </if>
           <if test="userSource != null">	
				user_source1,
			</if>	           	
           <if test="department_id != null">
               department_id,
           </if>
            <if test="company_id != null">
               company_id,
           </if>	
           <if test="team_id != null">
               team_id,
           </if>	                                 
           <if test="status != null">
               status,
           </if>	 
           <if test="position_id != null">
               position_id,
           </if>	  
           <if test="jobId != null">
               job_id,
           </if>	             
           <if test="employed_date != null">
           	  employed_date,
           </if>           
           <if test="email != null">
          	   email,
           </if>
            <if test="lastModifyTime != null">
           	  last_modify_time,
           </if>           
           <if test="creates_date != null">
          	   creates_date,
           </if>
           <if test="head_portrait != null">
               head_portrait,
           </if>
           speciality
		)
		VALUES (
           <if test="userId != null">		
				#{userId},
			</if>
           <if test="loginName != null">			
				#{loginName},
			</if>
           <if test="password != null">				
				#{password},
			</if>
			<if test="userName != null">	
				#{userName},
			</if>
			<if test="empCode != null and empCode != ''">
				#{empCode},
			</if>
			<if test="userSource != null">	
				#{userSource},
			</if>
           <if test="department_id != null">
               #{department_id},
           </if>
           <if test="company_id != null">
               #{company_id},
           </if>	
           <if test="team_id != null">
               #{team_id},
           </if>	                                 
           <if test="status != null">
               #{status},
           </if>	 
           <if test="position_id != null">
              #{position_id},
           </if>	  
           <if test="jobId != null">
               #{jobId},
           </if>	             
           <if test="employed_date != null">
           	  #{employed_date},
           </if>           
           <if test="email != null">
          	   #{email},
           </if>
           <if test="lastModifyTime != null">
           	  #{lastModifyTime},
           </if>           
           <if test="creates_date != null">
          	   #{creates_date},
           </if>
           <if test="head_portrait != null">
               #{head_portrait},
           </if>
           #{speciality}
		)
	</insert>
	
	<!-- 保存用户和角色的关系 -->
   	<insert id="saveUserRole" parameterType="java.util.Map">  
	    INSERT INTO jx_user_role
	    	(id, userid, roleid)        
	    VALUES  
	        (nextval('task_seq'), #{userId}, #{roleId})  
	 </insert>
   	<!-- 删除已有的用户和角色关系 -->
   	<delete id="deleteUserRoles" parameterType="String">
   		DELETE FROM JX_user_role  WHERE userid = #{userId}
   	</delete>

	<!-- 修改用户 -->
	<update id="updateUser" parameterType="User">
		UPDATE JX_users 
		<set>
			<if test="userName != null">user_name = #{userName},</if>
			<if test="loginName != null">login_name = #{loginName},</if>
			<if test="department_id != null">department_id = #{department_id},</if>
			<if test="company_id != null">company_id = #{company_id},</if>
			<if test="team_id != null">team_id = #{team_id},</if>
			<if test="position_id != null">position_id = #{position_id},</if>
			<if test="employed_date != null">employed_date = #{employed_date},</if>
			<if test="jobId != null">job_id = #{jobId},</if>
			<if test="email != null">email = #{email},</if>
			<if test="speciality != null">speciality = #{speciality},</if>
			<if test="lastModifyTime != null">last_modify_time = #{lastModifyTime},</if>
			<if test="head_portrait != null">head_portrait = #{head_portrait}</if>
		</set>
		 WHERE user_id = #{userId}
	</update>

	<!-- 修改用户密码 -->
	<update id="updateUserPassword" parameterType="User">
		UPDATE jx_users
		   SET password = #{password}
		 WHERE user_id = #{userId}
	</update>
	
	<!-- 修改登陆用户密码 -->
	<update id="updatePassword" parameterType="User">
		UPDATE jx_users 
		   SET password = #{password}
		 WHERE user_id = #{userId}
	</update>
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="String">
		DELETE FROM jx_users t WHERE t.user_id = #{userId}
	</delete>
	<!-- 停用用户 -->
	<update id="disableUser" parameterType="String">
		UPDATE jx_users t set t.status = '1' WHERE t.user_id = #{userId}
	</update>
	
	<!-- 启用用户 -->
	<update id="enableUser" parameterType="String">
		UPDATE jx_users t set t.status = '0' WHERE t.user_id = #{userId}
	</update>
	
	<!-- 查询SESSION用户信息 -->
	<select id="getSessionUser" resultMap="Base_Result_Map" parameterType="String">
		select 
			t.USER_ID,
    		t.LOGIN_NAME,
    		t.PASSWORD,
    		t.USER_NAME,
    		t.MANAGER_ID,
    		t.USER_SOURCE1,
    		t.JOB_ID,		
  			(select p.name from JX_GLOBE_DICTIONARY p where t.job_id=p.code)  post_Name,
    		t.ORG_ID,
    		t.EMP_ID,
    		t.STATUS,
    		t.LOGIN_IP,
    		t.USER_TYPE,
    		t.LAST_LOGIN_TIME,
    		t.CREATE_BY,
    		t.CREATE_TIME,
    		t.LAST_MODIFY_BY,
    		t.LAST_MODIFY_TIME,
    		t.DEPARTMENT_ID,
   			t.company_id,
   			t.head_portrait,
			(select p.name from JX_GLOBE_DICTIONARY p where t.DEPARTMENT_ID=p.code)  department_Name,
			(select p.name from JX_GLOBE_DICTIONARY p where t.company_id=p.code)  company_Name,
    		t.TEAM_ID,
    		(select p.name from JX_GLOBE_DICTIONARY p where t.TEAM_ID=p.code)  team_Name,
    		t.POSITION_ID,
    		(select p.name from JX_GLOBE_DICTIONARY p where t.POSITION_ID=p.code)  position_Name,
    		t.EMPLOYED_DATE,
  			 t.CREATES_DATE,
    		t.EMAIL
  			from jx_users t
 			where  t.login_name = #{login}
	</select>
	
	<!-- 查理财经理ID集合 -->
	<select id="getTDUser" resultMap="Base_Result_Map" parameterType="String">
		select distinct c.user_id  ids 
	    from JX_users c
	    where c.user_id=#{userId} and User_Source1 = #{dbSource}
	</select>

	<!-- 查询用户角色 -->
	<select id="getUserRole" resultType="Role" parameterType="String">
		select b.role_code roleCode from Jx_users a,Jx_roles b,Jx_user_role c
		where a.user_id=c.userid and b.id=c.roleid and a.login_name=#{login}
	</select>
	
	<!-- 查询用户权限 ,Jx_roles b,Jx_user_role-->
	<select id="getUserPermission" resultType="Menu" parameterType="String">
	select e.privileges_code from Jx_users a,Jx_roles b,Jx_user_role c,
    	Jx_role_privileges d,Jx_menu e
    	where a.user_id=c.userid and b.id=c.roleid and b.role_code=d.role_code
		and d.privileges_code=e.privileges_code and a.login_name=#{login}
		and a.User_Source1='0'
		
	</select>
	<!-- 在绩效库里查询角色 -->
	<select id="getRolecode" resultType="Role" parameterType="String">
		select r.rolecode from jx_role_relation r where r.jx_source='1' and r.source_rolecode=#{roleid}
	</select>
	
	<select id="getUserRolePermission" resultType="Menu" parameterType="String">
		 select e.privileges_code
   		from 
        Jx_roles           b,
        Jx_role_privileges d,
        Jx_menu            e
 		where 
        b.role_code=#{roleCode}
    	and b.role_code = d.role_code
    	and d.privileges_code = e.privileges_code
	</select>
<!-- ********汇金端**************************************************************** -->
	
	<!-- 汇金用户登录查询 -->
	<select id="getIsFinaceLogin" resultMap="Base_Result_Map" parameterType="java.util.HashMap">
		
      SELECT a.id user_id,
      
        a.login_name,
           b.emp_name user_name,
           a.password,
           b.emp_code empCode,
           a.status,
           a.create_by,
           b.org_id orgId,
           b.post_id jobId,
           a.create_time,
           a.last_modify_by,
           a.last_modify_time
    FROM jk_user@tositjk a,jk_employee@tositjk b where a.emp_code=b.emp_code
    and a.status='0'
    and a.login_name= #{loginName}
	</select>
	
		<!-- 汇金查询SESSION用户信息 -->
	<select id="getFinaceLoginSessionUser" resultMap="Base_Result_Map" parameterType="String">
		
		SELECT a.id user_id,
           a.login_name,
           b.emp_name user_name,
           a.password,
           b.emp_code emp_id,
           a.status,
           a.create_by,
           b.org_id orgId,
           b.post_id jobId,
           a.create_time,
           c.postname postName,
           a.last_modify_by,
           a.last_modify_time
    FROM jk_user@tositjk a,jk_employee@tositjk b ,jk_post@tositjk c where c.id(+)=b.post_id and a.emp_code=b.emp_code
    and a.status='0'
    and a.login_name= #{login}
	</select>
		<!-- 查理财经理ID集合 -->
	<select id="getFinaceTDUser" resultMap="Base_Result_Map" parameterType="String">
		select distinct c.id  ids 
	    from Jk_user@tositjk c
	    where c.id=#{userId} 
	</select>
	
	<!-- 查询用户角色 -->
	<select id="getFinaceUserRole" resultType="Role" parameterType="String">
	
	<!-- 	select l.id roleCode  from jk_user@tositjk u,jk_user_role@tositjk r ,jk_role@tositjk l 
		where u.id=r.userid and r.roleid=l.id  and u.login_name=#{login} -->
		 select jx.rolecode
      from jk_user@tositjk u
      inner join jk_user_role@tositjk r
        on u.id = r.userid
     inner join jk_role@tositjk l
        on r.roleid = l.id
     left join jx_role_relation jx
        on jx.source_rolecode = l.id
       and jx.jx_source = '1'
     
     where u.login_name = #{login}
		<!-- select a.post_id roleCode from jk_employee@tositjk a where a.emp_code=#{login} -->
	</select>
	
	
	<select id="getOrgInfo" resultType="java.util.HashMap" >
    	SELECT * FROM  JX_GLOBE_DICTIONARY
    </select>
    
    <select id="getTeamByCode" resultType="java.util.HashMap" parameterType="String">
    	select * from jx_globe_dictionary t where t.parent_id = (select id from jx_globe_dictionary where code = #{id})
    </select>
	
	<!-- 批量删除用户 -->
	<delete id="batchDeleteUser" parameterType="java.util.List">
        DELETE  FROM JX_USERS  WHERE USER_ID in
        <if test="list != null and list.size() > 0 ">
        	<foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
        		#{item}
        	</foreach>
        </if> 
    </delete>
    
    <!-- 批量删除用户的同时删除用户角色关系 -->
	<delete id="batchDeleteUserRole" parameterType="java.util.List">
        DELETE  FROM JX_USER_ROLE  WHERE USERID in
        <if test="list != null and list.size() > 0 ">
        	<foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
        		#{item}
        	</foreach>
        </if> 
    </delete>
    
    <!-- 批量停用用户 -->
	<delete id="batchStopUser" parameterType="java.util.List">
        UPDATE  JX_USERS SET STATUS = '1'  WHERE USER_ID in
        <if test="list != null and list.size() > 0 ">
        	<foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
        		#{item}
        	</foreach>
        </if> 
    </delete>
	
	<select id="getUserListByPro" resultMap="Base_Result_Map" resultType="User">
		
		select * from jx_users where 1=1
		<if test="userName != null and userName != '' ">
			 and user_name like '%${userName}%'
		</if>
		<if test="department_id != null and department_id != '' ">
			 and department_id = #{department_id}
		</if>
		<if test="team_id != null and team_id != '' ">
			 and team_id = #{team_id}
		</if>
		<if test="position_id != null and position_id != '' ">
			 and position_id = #{position_id}
		</if>
		and status='0'
		ORDER BY employed_date desc
	</select>
	
	<select id="checkLoginName" resultType="java.lang.Integer" parameterType="String">
    	select count(*) from jx_users  where login_name = #{loginName}
    </select>
    
    <select id="getLoginNameList" resultType="java.util.HashMap">
    	select login_name from jx_users
    </select>
    
    <select id="getBuMenList" resultType="java.util.HashMap">
    	select * FROM jx_globe_dictionary WHERE type_code in ('01','02','03','04')
    </select>
    
    <select id="getRoleList" resultType="java.util.HashMap">
    	select * FROM jx_roles
    </select>
    
    <select id="getDepartmentManagerById" resultMap="Base_Result_Map" parameterType="String">
    	select * from jx_users where department_id =(select department_id from  jx_users where user_id = #{zjid}) and position_id = '10035' order by employed_date asc
    </select>
	
	 <select id="getAllUserList" resultMap="Base_Result_Map">
    	select * FROM jx_users where STATUS = '0' and DEPARTMENT_ID  &lt;&gt; '99999' and DEPARTMENT_ID is not null and DEPARTMENT_ID &lt;&gt; ''
     </select>
     
     <!-- 所有在部门经理以下的员工 -->
     <select id="getAllGeneralUsers" resultMap="Base_Result_Map">
     	select * FROM jx_users u,jx_user_role ur,jx_roles r WHERE u.STATUS = '0' 
		and u.DEPARTMENT_ID  &lt;&gt; '99999' 
		and u.DEPARTMENT_ID IS NOT NULL AND u.DEPARTMENT_ID &lt;&gt;''
		and u.user_id=ur.userid AND ur.roleid=r.id AND r.role_code!='BMJL' and u.position_id !='10035'
     </select>
     
     <!-- 所有在部门经理以下的各部门人数 -->
     <select id="getUserCountByDeparment" resultType="java.util.Map">
		select u.DEPARTMENT_ID,count(u.DEPARTMENT_ID) count FROM jx_users u,jx_user_role ur,jx_roles r WHERE u.STATUS = '0' 
		and u.DEPARTMENT_ID  &lt;&gt; '99999' 
		and u.DEPARTMENT_ID IS NOT NULL AND u.DEPARTMENT_ID &lt;&gt;''
		and u.user_id=ur.userid AND ur.roleid=r.id AND r.role_code!='BMJL' and u.position_id !='10035'
		group BY u.DEPARTMENT_ID ORDER BY u.DEPARTMENT_ID
     </select>
</mapper>

















