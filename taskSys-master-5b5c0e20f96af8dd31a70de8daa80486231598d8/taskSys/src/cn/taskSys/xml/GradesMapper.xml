<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.taskSys.dao.GradesDao">
	<resultMap type="cn.taskSys.entity.Grades" id="Base_Result_Map">
		<result column="g_id" property="gId" />
		<result column="g_userid" property="gUserId"/>
		<result column="g_scores" property="gScores"/>
		<result column="g_month" property="gMonth"/>
		<result column="g_state" property="gState"/>
		<result column="g_remark" property="gRemark"/>
		<result column="g_emp_code" property="gEmpCode"/>
		<result column="add_time" property="addTime"/>
		<result column="team" property="team"/>
		<result column="department" property="department"/>
		<result column="username" property="username"/>
		<result column="g_task_score" property="taskScore"/>
		<result column="g_task_status_score" property="taskStatusScore"/>
		<result column="g_saturation_score" property="saturationScore"/>
		
	</resultMap>
	
	<!-- 保存每月得分 -->
   	<insert id="saveScore" parameterType="java.util.List">  
     INSERT INTO JX_GRADES
    	(g_id,g_userid,g_scores,g_month,g_emp_code,g_remark,g_state,add_time,g_task_score,g_task_status_score,g_saturation_score)        
    VALUES
	    <foreach item="grades" collection="list" index="index" separator=",">
	    	(#{grades.gId}, #{grades.gUserId}, #{grades.gScores}, #{grades.gMonth}, #{grades.gEmpCode}, #{grades.gRemark}, #{grades.gState}, #{grades.addTime}, #{grades.taskScore}, #{grades.taskStatusScore}, #{grades.saturationScore})  
		</foreach>
	</insert>
	
	<!-- 根据所选日期查询该月的得分 -->
	<select id="getScoreByPro" parameterType="java.util.HashMap" resultMap="Base_Result_Map">
		select g_scores,g_state from jx_grades where g_userid = #{gUserId} and g_month = #{gMonth} order by add_time desc
	</select>
	<!-- 用户分数列表 -->
	<select id="getScoreList" parameterType="cn.taskSys.entity.UserScore" resultType="cn.taskSys.entity.UserScore">
		select z.* from (
		select a.login_name,a.user_name,
		(select p.name from JX_GLOBE_DICTIONARY p where a.DEPARTMENT_ID=p.code) department_Name,
		(select p.name from JX_GLOBE_DICTIONARY p where a.TEAM_ID=p.code) team_Name, 
		(select p.name from JX_GLOBE_DICTIONARY p where a.POSITION_ID=p.code) position_Name,
		(select p.name from JX_GLOBE_DICTIONARY p where a.job_id=p.code) post_Name,
		b.g_scores,b.add_time,b.g_remark,b.g_month,b.g_task_score,b.g_task_status_score,b.g_saturation_score
		FROM jx_users a left join jx_grades b ON a.login_name =b.g_emp_code
		where a.status='0' and a.department_id &lt;&gt; '' and  a.department_id is not null and  a.department_id &lt;&gt; '99999'
		<if test="gMonth != null and gMonth != '' ">
			and b.g_month=#{gMonth}
		</if>
		<if test="department != null and department != '' ">
			and a.department_id=#{department}
		</if>
		<if test="login_name != null and login_name != '' ">
			and b.g_emp_code=#{login_name}
		</if>
		<if test="user_name != null and user_name != '' ">
			and a.user_name like '%${user_name}%'
		</if>
		<if test="g_remark != null and g_remark != '' ">
			and b.g_remark like '%${g_remark}%'
		</if>
		<choose>
			<when test="orderByPro != null and orderByPro != '' and orderByPro=='g_scores'  ">
				order by b.g_scores ${orderByFlag}
			</when>
			<otherwise> ORDER BY a.department_id,b.g_emp_code,b.g_month,b.g_scores desc</otherwise>
		</choose>
		)z  LIMIT 			 
			 <![CDATA[ #{maxResult} OFFSET ( #{page} - 1)*#{maxResult}   ]]>
	</select>
	<!-- 用户分数列表总条数 -->
	<select id="getScoreListCount" parameterType="cn.taskSys.entity.UserScore" resultType="java.lang.Integer">
		select count(*) from (
		select a.login_name,a.user_name,
		(select p.name FROM JX_GLOBE_DICTIONARY p WHERE a.DEPARTMENT_ID=p.code) department_Name,
		(select p.name FROM JX_GLOBE_DICTIONARY p WHERE a.TEAM_ID=p.code) team_Name, 
		(select p.name FROM JX_GLOBE_DICTIONARY p WHERE a.POSITION_ID=p.code) position_Name,
		(select p.name FROM JX_GLOBE_DICTIONARY p WHERE a.job_id=p.code) post_Name,
		b.g_scores
		FROM jx_users a LEFT JOIN jx_grades b ON a.login_name =b.g_emp_code
		where a.status='0' and a.department_id &lt;&gt; '' and  a.department_id is not null and  a.department_id &lt;&gt; '99999'
		<if test="gMonth != null and gMonth != '' ">
			and b.g_month=#{gMonth}
		</if>
		<if test="department != null and department != '' ">
			and a.department_id=#{department}
		</if>
		<if test="login_name != null and login_name != '' ">
			and b.g_emp_code=#{login_name}
		</if>
		<if test="user_name != null and user_name != '' ">
			and a.user_name like '%${user_name}%'
		</if>
		<if test="g_remark != null and g_remark != '' ">
			and b.g_remark like '%${g_remark}%'
		</if>
		ORDER BY a.department_id,a.team_id,a.job_id
		) ky
	</select>
	<!-- 用户导出分数列表  -->
	<select id="getScoreList2" parameterType="cn.taskSys.entity.UserScore" resultType="cn.taskSys.entity.UserScore">
		select a.login_name,a.user_name,
		(select p.name from JX_GLOBE_DICTIONARY p where a.DEPARTMENT_ID=p.code) department_Name,
		(select p.name from JX_GLOBE_DICTIONARY p where a.TEAM_ID=p.code) team_Name, 
		(select p.name from JX_GLOBE_DICTIONARY p where a.POSITION_ID=p.code) position_Name,
		(select p.name from JX_GLOBE_DICTIONARY p where a.job_id=p.code) post_Name,
		b.g_scores,b.add_time,b.g_remark,b.g_month,b.g_task_score,b.g_task_status_score,b.g_saturation_score
		FROM jx_users a left join jx_grades b ON a.login_name =b.g_emp_code
		where a.status='0' and a.department_id &lt;&gt; '' and  a.department_id is not null and  a.department_id &lt;&gt; '99999'
		<if test="gMonth != null and gMonth != '' ">
			and b.g_month=#{gMonth}
		</if>
		<if test="department != null and department != '' ">
			and a.department_id=#{department}
		</if>
		<if test="login_name != null and login_name != '' ">
			and b.g_emp_code=#{login_name}
		</if>
		<if test="user_name != null and user_name != '' ">
			and a.user_name like '%${user_name}%'
		</if>
		<if test="g_remark != null and g_remark != '' ">
			and b.g_remark like '%${g_remark}%'
		</if>
		<choose>
			<when test="orderByPro != null and orderByPro != '' and orderByPro=='g_scores'  ">
				order by b.g_scores ${orderByFlag}
			</when>
			<otherwise> ORDER BY a.department_id,a.team_id,a.job_id</otherwise>
		</choose>
	</select>
	<delete id="delScore" parameterType="cn.taskSys.entity.UserScore">
		delete from jx_grades where g_month = #{g_month}
	</delete>
</mapper>





