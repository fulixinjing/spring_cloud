<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.taskSys.dao.StatCardDao">
	<resultMap type="cn.taskSys.entity.StatCard" id="StatCard_Map">
		<result column="ng_id" property="ng_id" />
		<result column="st_kind" property="st_kind" />
		<result column="ng_user_id" property="ng_user_id" />
		<result column="ng_dev_id" property="ng_dev_id" />
		<result column="ts_card" property="ts_card" />
		<result column="st_card_type" property="st_card_type" />
		<result column="st_dev_class" property="st_dev_class" />
		<result column="sz_verify" property="sz_verify" />
		<result column="bt_validate" property="bt_validate" />
		<result column="ng_forget_id" property="ng_forget_id" />
		<result column="ng_modify_id" property="ng_modify_id" />
		<result column="st_modify_type" property="st_modify_type" />
		<result column="ts_modify" property="ts_modify" />
		<result column="bt_native" property="bt_native" />
		<result column="sz_photo_path" property="sz_photo_path" />
		<result column="ng_creator" property="ng_creator" />
		<result column="ts_create" property="ts_create" />
	</resultMap>
	<resultMap type="cn.taskSys.entity.SysBranch" id="SysBranch_Map">
		<result column="ng_id" property="ng_id" />
		<result column="sz_name" property="sz_name" />
		<result column="ng_parent_id" property="ng_parent_id" />
		<result column="bt_is_agency" property="bt_is_agency" />
		<result column="sz_set_id" property="sz_set_id" />
		<result column="sz_code" property="sz_code" />
		<result column="nt_order" property="nt_order" />
		<result column="sz_branch_type" property="sz_branch_type" />
		<result column="ng_rule_id" property="ng_rule_id" />
		<result column="bt_inherit" property="bt_inherit" />
		<result column="bt_alllow_neutralize" property="bt_alllow_neutralize" />
		<result column="nt_state" property="nt_state" />
		<result column="sz_branch_path" property="sz_branch_path" />
		<result column="nt_branch_level" property="nt_branch_level" />
		<result column="nt_source" property="nt_source" />
		<result column="nt_child_count" property="nt_child_count" />
		<result column="sz_country_code" property="sz_country_code" />
		<result column="sz_state_code" property="sz_state_code" />
		<result column="sz_city_name" property="sz_city_name" />
		<result column="nt_irregular" property="nt_irregular" />
		<result column="ng_creator" property="ng_creator" />
		<result column="ts_create" property="ts_create" />
	</resultMap>
	<resultMap type="cn.taskSys.entity.SysUserBranch" id="SysUserBranch_Map">
		<result column="ng_id" property="ng_id" />
		<result column="ng_user_id" property="ng_user_id" />
		<result column="ng_branch_id" property="ng_branch_id" />
		<result column="ng_post_id" property="ng_post_id" />
		<result column="nt_empley_rcd" property="nt_empley_rcd" />
		<result column="dt_start_date" property="dt_start_date" />
		<result column="bt_is_primary" property="bt_is_primary" />
		<result column="sz_post_type" property="sz_post_type" />
		<result column="nt_order" property="nt_order" />
		<result column="ng_creator" property="ng_creator" />
		<result column="ts_create" property="ts_create" />
	</resultMap>
	<resultMap type="cn.taskSys.entity.SysUser" id="SysUser_Map">
		<result column="ng_id" property="ng_id" />
		<result column="sz_user_name" property="sz_user_name" />
		<result column="sz_employ_id" property="sz_employ_id" />
		<result column="sz_name" property="sz_name" />
		<result column="sz_card_id" property="sz_card_id" />
		<result column="sz_email" property="sz_email" />
		<result column="sz_nick_name" property="sz_nick_name" />
		<result column="sz_password" property="sz_password" />
		<result column="nt_gender" property="nt_gender" />
		<result column="sz_telephone" property="sz_telephone" />
		<result column="sz_mobile" property="sz_mobile" />
		<result column="nt_user_state" property="nt_user_state" />
		<result column="nt_overtime_count" property="nt_overtime_count" />
		<result column="bt_blacklist" property="bt_blacklist" />
		<result column="ng_last_card_id" property="ng_last_card_id" />
		<result column="bt_is_check" property="bt_is_check" />
		<result column="nt_begin_check" property="nt_begin_check" />
		<result column="nt_end_check" property="nt_end_check" />
		<result column="bt_have_holiday" property="bt_have_holiday" />
		<result column="sz_pwd_question" property="sz_pwd_question" />
		<result column="sz_pwd_answer" property="sz_pwd_answer" />
		<result column="dt_entry" property="dt_entry" />
		<result column="dt_start_work" property="dt_start_work" />
		<result column="bt_outbound" property="bt_outbound" />
		<result column="nt_source" property="nt_source" />
		<result column="nt_feature_count" property="nt_feature_count" />
		<result column="sz_education" property="sz_education" />
		<result column="sz_nation" property="sz_nation" />
		<result column="nm_work_factor" property="nm_work_factor" />
		<result column="nt_sync_state" property="nt_sync_state" />
		<result column="bt_sync" property="bt_sync" />
		<result column="sz_photo_path" property="sz_photo_path" />
		<result column="dt_leave_date" property="dt_leave_date" />
		<result column="tx_leave_reason" property="tx_leave_reason" />
		<result column="ng_creator" property="ng_creator" />
		<result column="ts_create" property="ts_create" />
	</resultMap>
	
	<!-- 打卡记录表 -->
	<select id="findStatCardList" parameterType="java.util.Map" resultType="cn.taskSys.entity.StatCard">
		select a.ng_id ng_id, 
			a.st_kind st_kind, 
			a.ng_user_id ng_user_id, 
			a.ng_dev_id ng_dev_id, 
			cast(a.ts_card as char) ts_card, 
			a.st_card_type st_card_type, 
			a.st_dev_class st_dev_class, 
			a.sz_verify sz_verify, 
			a.bt_validate bt_validate, 
			a.ng_forget_id ng_forget_id, 
			a.ng_modify_id ng_modify_id, 
			a.st_modify_type st_modify_type, 
			cast(a.ts_modify as char) ts_modify,
			a.bt_native bt_native, 
			a.sz_photo_path sz_photo_path, 
			a.ng_creator ng_creator, 
			a.ts_create ts_create
		from stat_card a, sys_user b where b.ng_id=a.ng_user_id and a.ts_create like '${currentDate}%'
		and b.sz_employ_id in 
		<foreach item="empCode" collection="empcodes" open="(" separator="," close=")">
			#{empCode}
		</foreach>
	</select>
	
	 <!-- 部门表 -->
	<select id="findSysBranchList" parameterType="java.util.Map" resultType="cn.taskSys.entity.SysBranch">
		select * from sys_branch
	</select>
	
	<!-- 用户部门关系表 -->
	<select id="findSysUserBranchList" parameterType="java.util.Map" resultType="cn.taskSys.entity.SysUserBranch">
		select a.* from sys_user_branch a, sys_user b where a.ng_user_id = b.ng_id
		and b.sz_employ_id in 
		<foreach item="empCode" collection="empcodes" open="(" separator="," close=")">
			#{empCode}
		</foreach>
	</select>
	
	<!-- 用户表 -->
	<select id="findSysUserList" parameterType="java.util.Map" resultType="cn.taskSys.entity.SysUser">
		select * from sys_user where sz_employ_id in 
		<foreach item="empCode" collection="empcodes" open="(" separator="," close=")">
			#{empCode}
		</foreach>
	</select>
	
	<!-- 插入表stat_card -->
	<insert id="saveStatCard" parameterType="list">
		INSERT INTO stat_card 
			(ng_id,st_kind,ng_user_id,ng_dev_id,ts_card,st_card_type,st_dev_class,sz_verify,bt_validate,ng_forget_id,ng_modify_id,st_modify_type,ts_modify,bt_native,sz_photo_path,ng_creator,ts_create)
		VALUES
		<foreach item="statCard" collection="list" index="index" separator=",">
			(#{statCard.ng_id}, #{statCard.st_kind}, #{statCard.ng_user_id}, #{statCard.ng_dev_id}, #{statCard.ts_card}, #{statCard.st_card_type}, #{statCard.st_dev_class}, #{statCard.sz_verify}, #{statCard.bt_validate}, #{statCard.ng_forget_id}, #{statCard.ng_modify_id}, #{statCard.st_modify_type}, #{statCard.ts_modify}, #{statCard.bt_native}, #{statCard.sz_photo_path}, #{statCard.ng_creator}, #{statCard.ts_create})
		</foreach>
	</insert>
	
	<!-- 插入表sys_branch -->
	<insert id="saveSysBranch" parameterType="list">
		INSERT INTO sys_branch 
			(ng_id,sz_name,ng_parent_id,bt_is_agency,sz_set_id,sz_code,nt_order,sz_branch_type,ng_rule_id,bt_inherit,bt_alllow_neutralize,nt_state,sz_branch_path,nt_branch_level,nt_source,nt_child_count,sz_country_code,sz_state_code,sz_city_name,nt_irregular,ng_creator,ts_create)
		VALUES
		<foreach item="sysBranch" collection="list" index="index" separator=",">
			(#{sysBranch.ng_id},#{sysBranch.sz_name},#{sysBranch.ng_parent_id},#{sysBranch.bt_is_agency},#{sysBranch.sz_set_id},#{sysBranch.sz_code},#{sysBranch.nt_order},#{sysBranch.sz_branch_type},#{sysBranch.ng_rule_id},#{sysBranch.bt_inherit},#{sysBranch.bt_alllow_neutralize},#{sysBranch.nt_state},#{sysBranch.sz_branch_path},#{sysBranch.nt_branch_level},#{sysBranch.nt_source},#{sysBranch.nt_child_count},#{sysBranch.sz_country_code},#{sysBranch.sz_state_code},#{sysBranch.sz_city_name},#{sysBranch.nt_irregular},#{sysBranch.ng_creator},#{sysBranch.ts_create})
		</foreach>
	</insert>
	
	<!-- 插入表sys_user_branch -->
	<insert id="saveSysUserBranch" parameterType="list">
		INSERT INTO sys_user_branch 
			(ng_id,ng_user_id,ng_branch_id,ng_post_id,nt_empley_rcd,dt_start_date,bt_is_primary,sz_post_type,nt_order,ng_creator,ts_create)
		VALUES
		<foreach item="sysUserBranch" collection="list" index="index" separator=",">
			(#{sysUserBranch.ng_id},#{sysUserBranch.ng_user_id},#{sysUserBranch.ng_branch_id},#{sysUserBranch.ng_post_id},#{sysUserBranch.nt_empley_rcd},#{sysUserBranch.dt_start_date},#{sysUserBranch.bt_is_primary},#{sysUserBranch.sz_post_type},#{sysUserBranch.nt_order},#{sysUserBranch.ng_creator},#{sysUserBranch.ts_create})
		</foreach>
	</insert>
	
	<!-- 插入表sys_user -->
	<insert id="saveSysUser" parameterType="list">
		INSERT INTO sys_user 
			(ng_id,sz_user_name,sz_employ_id,sz_name,sz_card_id,sz_email,sz_nick_name,sz_password,nt_gender,sz_telephone,sz_mobile,nt_user_state,nt_overtime_count,bt_blacklist,ng_last_card_id,bt_is_check,nt_begin_check,nt_end_check,bt_have_holiday,sz_pwd_question,sz_pwd_answer,dt_entry,dt_start_work,bt_outbound,nt_source,nt_feature_count,sz_education,sz_nation,nm_work_factor,nt_sync_state,bt_sync,sz_photo_path,dt_leave_date,tx_leave_reason,ng_creator,ts_create)
		VALUES
		<foreach item="sysUser" collection="list" index="index" separator=",">
			(#{sysUser.ng_id},#{sysUser.sz_user_name},#{sysUser.sz_employ_id},#{sysUser.sz_name},#{sysUser.sz_card_id},#{sysUser.sz_email},#{sysUser.sz_nick_name},#{sysUser.sz_password},#{sysUser.nt_gender},#{sysUser.sz_telephone},#{sysUser.sz_mobile},#{sysUser.nt_user_state},#{sysUser.nt_overtime_count},#{sysUser.bt_blacklist},#{sysUser.ng_last_card_id},#{sysUser.bt_is_check},#{sysUser.nt_begin_check},#{sysUser.nt_end_check},#{sysUser.bt_have_holiday},#{sysUser.sz_pwd_question},#{sysUser.sz_pwd_answer},#{sysUser.dt_entry},#{sysUser.dt_start_work},#{sysUser.bt_outbound},#{sysUser.nt_source},#{sysUser.nt_feature_count},#{sysUser.sz_education},#{sysUser.sz_nation},#{sysUser.nm_work_factor},#{sysUser.nt_sync_state},#{sysUser.bt_sync},#{sysUser.sz_photo_path},#{sysUser.dt_leave_date},#{sysUser.tx_leave_reason},#{sysUser.ng_creator},#{sysUser.ts_create})
		</foreach>
	</insert>
	
	<delete id="deleteSysBranch">
		delete from sys_branch
	</delete>
	<delete id="deleteSysUserBranch">
		delete from sys_user_branch
	</delete>
	<delete id="deleteSysUser">
		delete from sys_user
	</delete>
</mapper>





